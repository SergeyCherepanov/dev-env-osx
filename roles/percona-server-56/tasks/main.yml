---
- name: "Ensure Percona(Mysql) Server {{ mysql_formula }}"
  homebrew: 
    name: "{{ mysql_formula }}"
    state: latest
  tags:
    - percona56

- name: "Resolve mysql base dir"
  shell: "ls {{ homebrew_install_path }}/opt/percona-server*/bin/mysqld | xargs -I{} bash -c '{} --version' | grep -i 'ver {{ mysql_version }}' | head -1 | awk '{print $1}' | xargs dirname | xargs dirname"
  register: mysql_base_dir_output
  tags:
    - percona56

- name: Register mysql_base_dir fact
  set_fact: 
    mysql_base_dir: "{{ mysql_base_dir_output.stdout | trim }}"
  tags:
    - percona56

- name: "Create directories"
  file: 
    path: "{{ item }}"
    state: directory
  with_items:
    - "{{ mysql_etc_dir }}"
    - "{{ mysql_data_dir }}"
    - "{{ mysql_log_dir }}"
    - "{{ mysql_run_dir }}"
  tags:
    - percona56

- name: "Ensure proper ownership on"
  file:
    path: "{{ mysql_etc_dir }}"
    state: directory
    owner: "{{ mysql_user }}"
    group: admin
    recurse: true
  become: yes
  with_items:
    - "{{ mysql_etc_dir }}"
    - "{{ mysql_data_dir }}"
    - "{{ mysql_log_dir }}"
    - "{{ mysql_run_dir }}"
  tags:
    - percona56

- stat:
    path: "{{ mysql_etc_dir }}/my.cnf"
  register: state
  tags:
    - percona56

- name: "Create my.cnf"
  template: 
    src: my.cnf.j2
    dest: "{{ mysql_etc_dir }}/my.cnf"
    owner: "{{ www_user }}"
    group: "{{ www_group }}"
    mode: 0744
  when: not state.stat.exists
  tags:
    - percona56

- find: 
    paths: "{{ mysql_data_dir }}"
  register: mysql_data_dir_files
  tags:
    - percona56

- name: Touch error.log file
  file: 
    path: "{{ mysql_log_dir }}/error.log"
    state: touch
    owner: "{{ www_user }}"
    group: "{{ www_group }}"
  tags:
    - percona56

- name: "Install db (mysqld --initialize-insecure)"
  shell: "{{ mysql_base_dir }}/bin/mysql_install_db --basedir={{ mysql_base_dir }} --datadir={{ mysql_data_dir }}"
  when: mysql_data_dir_files.matched|int == 0
  tags:
    - percona56

- stat: 
    path: "{{ homebrew_install_path }}/etc/supervisor.d/{{ mysql_supervisord_name }}.ini"
  register: state
  tags:
    - percona56

- name: "Create {{ homebrew_install_path }}/etc/supervisor.d/{{ mysql_supervisord_name }}.ini"
  template:
    src: supervisord.ini.j2
    dest: "{{ homebrew_install_path }}/etc/supervisor.d/{{ mysql_supervisord_name }}.ini"
  when: not state.stat.exists
  tags:
    - percona56

- ini_file:
    path: "{{ homebrew_install_path }}/etc/supervisor.d/{{ mysql_supervisord_name }}.ini"
    section: "program:{{ mysql_supervisord_name }}"
    option: "command" 
    value: "{{ homebrew_install_path }}/bin/pidproxy /usr/local/var/run/mysql/{{ mysql_version_num }}/mysqld.proxy.pid {{ mysql_base_dir }}/bin/mysqld_safe --defaults-file={{ mysql_etc_dir }}/my.cnf"
  tags:
    - percona56

- homebrew: 
    name: "{{ mysql_formula }}"
    state: unlinked
  tags:
    - percona56

- name: "Absent {{ homebrew_install_path }}/var/mysql"
  file:
    state: absent
    path: "{{ homebrew_install_path }}/var/mysql/"
  tags:
    - percona56

- name: Setting plugin=mysql_native_password and update root password
  shell: "{{ mysql_base_dir }}/bin/mysqld_safe --defaults-file={{ mysql_etc_dir }}/my.cnf --skip-grant-tables > /dev/null 2>&1 & sleep 10 && {{ mysql_base_dir }}/bin/mysql -h{{ mysql_listen_address }} -P{{ mysql_listen_port }} -uroot -e 'update user set plugin=\"mysql_native_password\"; update user set Password=password(\"{{ mysql_root_password }}\"), password_expired=\"N\" where user=\"root\";' mysql && pgrep mysql | xargs kill -15 && sleep 5"
  args:
    chdir: /tmp
  tags:
    - percona56

- name: "Add wrapper"
  template:
    src: "mysql.j2"
    dest: "{{ homebrew_install_path }}/bin/mysql{{ mysql_version_num }}"
    owner: "{{ mysql_user }}"
    mode: 0755
  tags:
    - percona56