---
- name: Ensure php taps are untapped.
  homebrew_tap: "tap={{ item }} state=absent"
  with_items:
  - "kyslik/homebrew-php"
  - "sergeycherepanov/php"
  tags:
  - php71

- name: Ensure php taps are tapped.
  homebrew_tap: "tap={{ item }} state=present"
  with_items:
  - "djocker/common"
  - "djocker/php"
  tags:
  - php71

- name: "Unlinking all already installed php packages"
  shell: "brew list | grep php | xargs brew unlink"
  when: ansible_system == "Darwin"
  tags:
  - php71

- name: "Unlinking all already installed php packages"
  shell: "brew list | grep php | xargs --no-run-if-empty brew unlink"
  when: ansible_system == "Linux"
  tags:
  - php71

- name: "Installing {{ php_version }} dependencies"
  homebrew:
    name: "{{ item }}"
    state: present
  with_items: "{{ php_dependencies }}"
  tags:
  - php71

- name: "Installing php71 with flags: {{ php71_flags }}"
  homebrew:
    name: php71
    state: present
    install_options: "{{ php71_flags }}"
  tags:
  - php71

- name: "Installing php71 modules"
  homebrew:
    name: "{{ item }}"
    state: present
    install_options: "build-from-source"
  with_items: "{{ php71_modules }}"
  tags:
  - php71

- name: "Remove outdated php71"
  shell: "brew upgrade --cleanup php71"
  ignore_errors: yes
  tags:
  - php71

- name: "Installing php71 pear packages modules"
  shell: "pear install {{ item }}"
  with_items: "{{ php71_pear_packages }}"
  tags:
  - php71

- name: "Add wrapper"
  template:
    src: "php.j2"
    dest: "{{ brew_install_path }}/bin/{{ php_version }}"
    owner: "{{ www_user }}"
    group: "{{ www_group }}"
    mode: 0755
  tags:
  - php71

- name: "Ensure xphp wrapper directory"
  file:
    path: "{{ brew_install_path }}/opt/xphp/{{ php_version_num }}/bin"
    state: directory
  tags:
    - php71

- name: "Ensure xphp bin"
  template:
    src: "xphp-bin.j2"
    dest: "{{ brew_install_path }}/opt/xphp/{{ php_version_num }}/bin/php"
    owner: "{{ www_user }}"
    group: "{{ www_group }}"
    mode: 0755
  tags:
    - php71

- name: "Add xphp wrapper"
  template:
    src: "xphp.j2"
    dest: "{{ brew_install_path }}/bin/x{{ php_version }}"
    owner: "{{ www_user }}"
    group: "{{ www_group }}"
    mode: 0755
  tags:
    - php71

#- stat:
#    path: "{{ brew_install_path }}/etc/php/{{ php_version_num }}/php-fpm.conf"
#  register: state
#  tags:
#    - php71

- name: "Create php-fpm.conf"
  template:
    src: "php-fpm.conf.j2"
    dest: "{{ brew_install_path }}/etc/php/{{ php_version_num }}/php-fpm.conf"
    owner: "{{ www_user }}"
    group: "{{ www_group }}"
  #  when: not state.stat.exists
  tags:
  - php71

#- stat: 
#    path: "{{ brew_install_path }}/etc/php/{{ php_version_num }}/php.ini"
#  register: state
#  tags:
#    - php71

- name: "Create php.ini"
  template:
    src: "php.ini.j2"
    dest: "{{ brew_install_path }}/etc/php/{{ php_version_num }}/php.ini"
    owner: "{{ www_user }}"
    group: "{{ www_group }}"
  #  when: not state.stat.exists
  tags:
  - php71

#- stat: 
#    path: "{{ brew_install_path }}/etc/php/{{ php_version_num }}/php-fpm-xdebug.conf"
#  register: state
#  tags:
#    - php71

- name: "Create php-fpm-xdebug.conf"
  template:
    src: php-fpm-xdebug.conf.j2
    dest: "{{ brew_install_path }}/etc/php/{{ php_version_num }}/php-fpm-xdebug.conf"
    owner: "{{ www_user }}"
    group: "{{ www_group }}"
  #  when: not state.stat.exists
  tags:
  - php71

#- stat: 
#    path: "{{ brew_install_path }}/etc/php/{{ php_version_num }}/php-xdebug.ini"
#  register: state
#  tags:
#    - php71

- name: "Disabling xdebug by default"
  lineinfile:
    path: '{{ brew_install_path }}/etc/php/{{ php_version_num }}/conf.d/ext-xdebug.ini'
    regexp: '^(zend_extension=.*)'
    line: ';\1'
    backrefs: yes
  tags:
  - php71

- name: "Create php-xdebug.ini"
  template:
    src: php.ini.j2
    dest: "{{ brew_install_path }}/etc/php/{{ php_version_num }}/php-xdebug.ini"
    owner: "{{ www_user }}"
    group: "{{ www_group }}"
  #  when: not state.stat.exists
  tags:
  - php71

- blockinfile:
    dest: '{{ brew_install_path }}/etc/php/{{ php_version_num }}/php-xdebug.ini'
    marker: "; {mark} ansible xdebug"
    block: |
      [xdebug]
      zend_extension="{{ brew_install_path }}/opt/{{ php_version }}-xdebug/xdebug.so"
      xdebug.remote_enable=1
      xdebug.remote_autostart = 0
      xdebug.remote_connect_back = 0
      xdebug.remote_host=127.0.0.1
      xdebug.remote_port=92{{ php_version_num_int }}
      xdebug.profiler_enable=0
      xdebug.profiler_output_dir=/tmp/xdebug{{ php_version_num_int }}
      xdebug.idekey=PHPSTORM
      xdebug.overload_var_dump=0
      xdebug.max_nesting_level=500
  tags:
  - php71

#- stat: 
#    path: "{{ brew_install_path }}/etc/php/{{ php_version_num }}/conf.d/ext-opcache.ini"
#  register: state
#  tags:
#    - php71

- name: Resolve extension dir
  shell: "{{ brew_install_path }}/bin/php{{ php_version_num_int }} -i | grep -e '^extension_dir' | awk -F'=>' '{print $2}'"
  register: output
  tags:
  - php71

- name: Register php_extension_dir
  set_fact:
    php_extension_dir: "{{ output.stdout | trim }}"
  tags:
  - php71

#- git:
#    repo: 'https://github.com/tideways/php-profiler-extension.git'
#    dest: "/tmp/xhprof{{php_version}}"
#    version: 'master'
#  tags:
#  - php71
#
#- name: "Build xhprof extension"
#  shell: >
#    {{ brew_install_path }}/opt/{{php_version}}/bin/phpize &&
#    ./configure --with-php-config={{ brew_install_path }}/opt/{{php_version}}/bin/php-config &&
#    make
#  args:
#    chdir: "/tmp/xhprof{{php_version}}"
#  tags:
#  - php71
#
#- name: "Install xhprof extension"
#  copy:
#    src: '/tmp/xhprof{{php_version}}/modules/tideways_xhprof.so'
#    dest: '{{ php_extension_dir }}/'
#  tags:
#  - php71
#
#- name: "Ensure ext-xhprof.ini"
#  copy:
#    content: "extension=tideways_xhprof.so"
#    dest: "{{ brew_install_path }}/etc/php/{{ php_version_num }}/conf.d/ext-xhprof.ini"
#  tags:
#  - php71

- name: "Create ext-opcache.ini"
  template:
    src: "ext-opcache.ini.j2"
    dest: "{{ brew_install_path }}/etc/php/{{ php_version_num }}/conf.d/ext-opcache.ini"
    owner: "{{ www_user }}"
    group: "{{ www_group }}"
  #  when: not state.stat.exists
  tags:
  - php71

- name: "Unlink php71"
  homebrew: "name=php71 state=unlinked"
  ignore_errors: yes
  tags:
  - php71

- name: add '{{ php_version_num_int }}' to "php_versions" array
  set_fact:
    php_versions: "{{ php_versions + [ php_version_num_int ] }}"
  tags:
  - php71

- name: Setting default php to {{ php_version_num_int }}
  set_fact:
    default_php: "{{ php_version_num_int }}"
  tags:
  - php71

- debug:
    var: php_versions
  tags:
  - php71

#- stat: 
#    path: "{{ brew_install_path }}/etc/supervisor.d/php71.ini"
#  register: state
#  tags:
#    - php71

- name: "Create etc/supervisor.d/php71.ini"
  template:
    src: supervisord.ini.j2
    dest: "{{ brew_install_path }}/etc/supervisor.d/php71.ini"
  #  when: not state.stat.exists
  tags:
  - php71

- name: "Ensure EFK config directory"
  file:
    path: "{{ brew_install_path }}/etc/efk/td-agent/conf.d"
    state: directory
  tags:
  - php71

- name: "Creates {{ brew_install_path }}/etc/efk/td-agent/conf.d/php{{ php_version_num }}.conf"
  template:
    src: td-agent.php.conf.j2
    dest: "{{ brew_install_path }}/etc/efk/td-agent/conf.d/php{{ php_version_num }}.conf"
    owner: "{{ www_user }}"
    group: "{{ www_group }}"
  tags:
  - php71

- name: "Linking php"
  shell: "brew link {{ php_version }}"
  tags:
  - php71
