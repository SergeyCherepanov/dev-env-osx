---
- name: "Ensure ElasticSearch Server"
  homebrew: 
    name: elasticsearch
    state: present
  
- name: "Ensure curator via pip"
  pip:
    name: elasticsearch-curator
    state: present
  become: yes
  
- name: "Ensure elastalert via pip"
  pip:
    name: elastalert
    state: present
  become: yes
  
- name: "Ensure Kibana"
  homebrew: 
    name: kibana
    state: present
  
# Cask.
- name: "Get list of apps installed with cask."
  command: >
    bash -l -c '{{ brew_brew_bin_path }}/brew cask list'
  register: brew_cask_list
  check_mode: no
  changed_when: false
  
# Use command module instead of brew_cask so appdir can be used.
- name: "Ensure td-agent (fluentd) via cask"
  command: >
    bash -l -c '{{ brew_brew_bin_path }}/brew cask install td-agent --appdir={{ brew_cask_appdir }}'
  when: "'td-agent' not in brew_cask_list.stdout and ansible_system == 'Darwin'"
  
- name: "Ensure td-agent (fluentd) via cask (macos only)"
  command: >
    bash -l -c '{{ brew_brew_bin_path }}/brew cask install td-agent --appdir={{ brew_cask_appdir }}'
  when: "'td-agent' not in brew_cask_list.stdout and ansible_system == 'Darwin'"
  
- name: "Ensure fluent-plugin-elasticsearch (macos only)"
  command: >
    /opt/td-agent/usr/sbin/td-agent-gem install fluent-plugin-elasticsearch
  become: yes
  when: "ansible_system == 'Darwin'"
  
- name: "Disable td-agent via launchctl (macos only)"
  command: "launchctl unload -w /Library/LaunchDaemons/td-agent.plist"
  become: yes
  when: "ansible_system == 'Darwin'"
  
- name: "Remove /Library/LaunchDaemons/td-agent.plist (macos only)"
  file:
    path: "/Library/LaunchDaemons/td-agent.plist"
    state: absent
  become: yes
  when: "ansible_system == 'Darwin'"
  
- name: "Ensure EFK directories"
  file:
    path: "{{ item }}"
    state: directory
  with_items:
    - "{{ brew_install_path }}/etc/efk"
    - "{{ brew_install_path }}/etc/efk/elasticsearch"
    - "{{ brew_install_path }}/etc/efk/td-agent"
    - "{{ brew_install_path }}/etc/efk/td-agent/conf.d"
    - "{{ brew_install_path }}/etc/efk/kibana"
    - "{{ brew_install_path }}/etc/efk/curator"
    - "{{ brew_install_path }}/var/log/efk"
    - "{{ brew_install_path }}/var/log/efk/td-agent"
    - "{{ brew_install_path }}/var/log/efk/td-agent/buffer"
    - "{{ brew_install_path }}/var/log/efk/elasticsearch"
    - "{{ brew_install_path }}/var/lib/efk/elasticsearch"
  
- name: "Ensure elasticsearch config"
  template:
    src: elasticsearch.yml.j2
    dest: "{{ brew_install_path }}/etc/efk/elasticsearch/elasticsearch.yml"
    owner: "{{ www_user }}"
    group: "{{ www_group }}"
  
- name: "Ensure jvm.options config"
  template:
    src: elasticsearch.jvm.options.j2
    dest: "{{ brew_install_path }}/etc/efk/elasticsearch/jvm.options"
    owner: "{{ www_user }}"
    group: "{{ www_group }}"
  
- name: "Ensure log4j2.properties config"
  template:
    src: elasticsearch.log4j2.properties.j2
    dest: "{{ brew_install_path }}/etc/efk/elasticsearch/log4j2.properties"
    owner: "{{ www_user }}"
    group: "{{ www_group }}"
  
- name: "Ensure td-agent config"
  template:
    src: td-agent.conf.j2
    dest: "{{ brew_install_path }}/etc/efk/td-agent/td-agent.conf"
    owner: "{{ www_user }}"
    group: "{{ www_group }}"
  
- name: "Ensure kibana config"
  template:
    src: kibana.yml.j2
    dest: "{{ brew_install_path }}/etc/efk/kibana/kibana.yml"
    owner: "{{ www_user }}"
    group: "{{ www_group }}"
  
- name: "Ensure curator config"
  template:
    src: curator.yml.j2
    dest: "{{ brew_install_path }}/etc/efk/curator/curator.yml"
    owner: "{{ www_user }}"
    group: "{{ www_group }}"
  
- name: "Create etc/supervisor.d/efk.ini"
  template:
    src: supervisord.ini.j2
    dest: "{{ brew_install_path }}/etc/supervisor.d/efk.ini"
  
- name: "Ensure kibana.local in /etc/hosts"
  lineinfile:
    path: '/etc/hosts'
    line: '127.0.0.1    kibana.local'
  become: yes
  
- name: "Ensure {{ brew_install_path }}/etc/nginx/servers/kibana.conf"
  template:
    src: nginx.kibana.conf.j2
    dest: "{{ brew_install_path }}/etc/nginx/servers/kibana.conf"
  
