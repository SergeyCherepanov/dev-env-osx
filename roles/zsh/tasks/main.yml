---
- name: "Clean /tmp/powerline_fonts if exists"
  file:
    state: absent
    path: "{{ item }}"
  with_items:
  - "/tmp/awesome-terminal-fonts"
  - "/tmp/powerline_fonts"
  - "/tmp/oh-my-zsh"
  ignore_errors: yes
  tags:
  - zsh

- name: "Downloading 'hack' font"
  git:
    repo: 'https://github.com/powerline/fonts.git'
    dest: '/tmp/powerline_fonts'
    version: 'master'
  tags:
  - zsh

- copy:
    src: '/tmp/powerline_fonts/Hack/'
    dest: '{{ brew_user_home_dir }}/Library/Fonts/'
  tags:
  - zsh

- name: "Downloading 'hack' font for terminal"
  git:
    repo: 'https://github.com/gabrielelana/awesome-terminal-fonts.git'
    dest: '/tmp/awesome-terminal-fonts'
    version: 'master'
  tags:
  - zsh

- name: "Installing 'hack' font"
  copy:
    src: '/tmp/awesome-terminal-fonts/build/'
    dest: '{{ brew_user_home_dir }}/.fonts/'
  tags:
  - zsh

- name: "Installing powerline-status via pip"
  pip:
    name: powerline-status
    state: present
    extra_args: --user
  tags:
  - zsh

- name: "Installing zsh via homebrew"
  homebrew:
    name: zsh
    state: present
  tags:
  - zsh

- name: "Adding zsh to /etc/shells"
  lineinfile:
    path: '/etc/shells'
    line: '{{ brew_brew_bin_path }}/zsh'
  become: yes
  tags:
  - zsh

- name: "Installing zsh-completions via homebrew"
  homebrew:
    name: zsh-completions
    state: present
  tags:
  - zsh

- name: "Installing prezto"
  git:
    repo: 'https://github.com/sorin-ionescu/prezto.git'
    dest: '{{ brew_user_home_dir }}/.zprezto'
    version: 'master'
  tags:
  - zsh

#- name: "Configure zshrc: {{ brew_user_home_dir }}/.zshrc"
#  shell: |
#    setopt EXTENDED_GLOB
#    for rcfile in ~/.zprezto/runcoms/^README.md(.N); do
#      unlink ~/.${rcfile:t}
#      cp "$rcfile" ~/.${rcfile:t}
#    done
#  args:
#    executable: {{ brew_install_path }}/bin/zsh
#  tags:
#    - zsh

- stat:
    path: "{{ brew_user_home_dir }}/.oh-my-zsh"
  register: state
  tags:
  - zsh

- name: "Clean {{ brew_user_home_dir }}/.oh-my-zsh"
  file:
    state: absent
    path: "{{ brew_user_home_dir }}/.oh-my-zsh"
  when: state.stat.exists
  tags:
  - zsh

- name: "Downloading oh-my-zsh"
  git:
    repo: 'https://github.com/robbyrussell/oh-my-zsh.git'
    dest: '/tmp/oh-my-zsh'
    version: 'master'
  tags:
  - zsh

- name: "Changing default shell to zsh "
  shell: 'chsh -s {{ brew_brew_bin_path }}/zsh {{ brew_user }}'
  become: true
  become_user: root
  tags:
  - zsh

- name: "Installing Oh My Zsh"
  shell: '/tmp/oh-my-zsh/tools/install.sh'
  ignore_errors: True
  environment:
    SHELL: "{{ brew_brew_bin_path }}/zsh"
  args:
    executable: "{{ brew_brew_bin_path }}/zsh"
  tags:
  - zsh

- name: "Adding homebrew to PATH in {{ brew_user_home_dir }}/.zshrc"
  blockinfile:
    create: yes
    dest: '{{ brew_user_home_dir }}/.zshrc'
    marker: "# {mark} homebrew PATH"
    block: |
      export PATH="{{ brew_install_path }}/sbin:{{ brew_install_path }}/bin:$PATH"
  tags:
  - zsh

- name: "Adding aliases {{ brew_user_home_dir }}/.zshrc"
  blockinfile:
    create: yes
    dest: '{{ brew_user_home_dir }}/.zshrc'
    marker: "# {mark} export aliases"
    block: |
      if [[ -f ~/.aliases ]]; then
        source ~/.aliases
      fi
  tags:
  - zsh

- name: "Setting EDITOR to vim"
  lineinfile:
    path: '{{ brew_user_home_dir }}/.zshrc'
    regexp: '^export EDITOR=.*'
    line: 'export EDITOR=vim'
  tags:
  - zsh

- name: "Setting VISUAL to vim"
  lineinfile:
    path: '{{ brew_user_home_dir }}/.zshrc'
    regexp: '^export VISUAL=.*'
    line: 'export VISUAL=vim'
  tags:
  - zsh

- lineinfile:
    path: '{{ brew_user_home_dir }}/.zshrc'
    regexp: '^DEFAULT_USER=.*'
    line: 'DEFAULT_USER="$USER"'
  tags:
  - zsh

- name: "Adding Prezto modules to {{ brew_user_home_dir }}/.zpreztorc"
  blockinfile:
    dest: '{{ brew_user_home_dir }}/.zshrc'
    marker: "# {mark} Prezto Modules"
    block: |
      zstyle ':prezto:load' pmodule \
        'environment' \
        'terminal' \
        'editor' \
        'history' \
        'directory' \
        'spectrum' \
        'utility' \
        'completion' \
        'git' \
        'syntax-highlighting' \
        'history-substring-search' \
        'prompt'

      zstyle ':prezto:module:prompt' theme 'paradox'
  tags:
  - zsh

- name: "Creating .vim/autoload folder"
  file:
    path: "{{item}}"
    state: directory
    mode: 0755
  with_items:
  - "{{ brew_user_home_dir }}/.vim/autoload"
  - "{{ brew_user_home_dir }}/.vim/bundle"
  tags:
  - zsh

- name: "Install pathogen.vim"
  get_url:
    url: "https://tpo.pe/pathogen.vim"
    dest: "{{ brew_user_home_dir }}/.vim/autoload/pathogen.vim"
  tags:
  - zsh

- name: "Adding pathogen.vim to .vimrc"
  blockinfile:
    create: yes
    dest: '{{ brew_user_home_dir }}/.vimrc'
    marker: '" {mark} pathogen.vim'
    block: |
      execute pathogen#infect()
      syntax on
      filetype plugin indent on
  tags:
  - zsh

- name: "Adding locales to PATH in {{ brew_user_home_dir }}/.zshrc"
  blockinfile:
    dest: '{{ brew_user_home_dir }}/.zshrc'
    marker: "# {mark} locales PATH"
    insertbefore: BOF
    block: |
      export LC_ALL=en_US.UTF-8
      export LANG=en_US.UTF-8
      source $HOME/.fonts/*.sh
  tags:
  - zsh

- name: "Adding Prezto to {{ brew_user_home_dir }}/.zshrc"
  blockinfile:
    dest: '{{ brew_user_home_dir }}/.zshrc'
    marker: "# {mark} Prezto init"
    insertbefore: BOF
    block: |
      # Source Prezto.
      if [[ -s "${ZDOTDIR:-$HOME}/.zprezto/init.zsh" ]]; then
        source "${ZDOTDIR:-$HOME}/.zprezto/init.zsh"
      fi

      # Customize to your needs...
  tags:
  - zsh

- name: "Resolve local python path"
#  shell: "cd $(dirname {{ brew_brew_bin_path }}/python); cd $(dirname $(readlink {{ brew_brew_bin_path }}/python)); pwd"
  shell: "cd $(dirname $(which python2)); cd $(dirname $(readlink $(which python2))); pwd"
  register: result
  tags:
  - always

- name: "Register local_python_path fact"
  set_fact: local_python_path="{{ result.stdout }}"
  tags:
  - always

- name: "Resolve site-packages location"
  shell: "{{ local_python_path }}/python -m site --user-site"
  register: result
  tags:
  - always

- name: "Register site_packages_dir fact"
  set_fact: site_packages_dir="{{ result.stdout }}"
  tags:
  - always

- name: "Resolve python user base dir"
  shell: "{{ local_python_path }}/python -m site --user-base"
  register: result
  tags:
  - always

- name: "Register python_user_base_dir fact"
  set_fact: python_user_base_dir="{{ result.stdout }}"
  tags:
  - always

- name: "Adding python_user_base_dir to PATH in {{ brew_user_home_dir }}/.zshrc"
  blockinfile:
    dest: '{{ brew_user_home_dir }}/.zshrc'
    marker: "# {mark} python_user_base_dir PATH"
    block: |
      export PATH="{{ python_user_base_dir }}/bin:$PATH"
  tags:
  - zsh

- name: "Adding powerline to config {{ brew_user_home_dir }}/.zshrc"
  blockinfile:
    dest: '{{ brew_user_home_dir }}/.zshrc'
    marker: "# {mark} powerline"
    block: |
      source {{ site_packages_dir }}/powerline/bindings/zsh/powerline.zsh
  tags:
  - zsh

- name: "Adding powerline config {{ brew_user_home_dir }}/.vimrc"
  blockinfile:
    dest: '{{ brew_user_home_dir }}/.vimrc'
    marker: '" {mark} powerline'
    block: |
      python from powerline.vim import setup as powerline_setup
      python powerline_setup()
      python del powerline_setup
      set laststatus=2
  tags:
  - zsh
