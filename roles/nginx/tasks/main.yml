---
- name: "Creates {{ www_dir }} directory"
  file:
    path: "{{ www_dir }}"
    state: directory
  tags:
    - always

- name: "Installing Nginx"
  homebrew:
    name: nginx
    state: present
  tags:
    - always

- name: "Creates {{ homebrew_install_path }}/etc/nginx/nginx.conf"
  template:
    src: nginx.conf.j2
    dest: "{{ homebrew_install_path }}/etc/nginx/nginx.conf"
    owner: "{{ www_user }}"
    group: "{{ www_group }}"
  tags:
    - always

- name: "Creates {{ homebrew_install_path }}/etc/nginx/conf.d"
  file:
    path: "{{ homebrew_install_path }}/etc/nginx/conf.d"
    state: directory
    mode: 0755
  tags:
    - always

- stat: 
    path: "{{ homebrew_install_path }}/etc/supervisor.d/nginx.ini"
  tags:
    - always
  register: state

- name: "Create etc/supervisor.d/nginx.ini"
  template:
    src: supervisord.ini.j2
    dest: "{{ homebrew_install_path }}/etc/supervisor.d/nginx.ini"
  when: not state.stat.exists
  tags:
    - always

- name: "Creates {{ homebrew_install_path }}/etc/logrotate.d/nginx.conf"
  template:
    src: logrotate.nginx.conf.j2
    dest: "{{ homebrew_install_path }}/etc/logrotate.d/nginx.conf"
    owner: "{{ www_user }}"
    group: "{{ www_group }}"
  tags:
    - always

- name: "Creates {{ homebrew_install_path }}/etc/efk/td-agent/conf.d/nginx.conf"
  template:
    src: td-agent.nginx.conf.j2
    dest: "{{ homebrew_install_path }}/etc/efk/td-agent/conf.d/nginx.conf"
    owner: "{{ www_user }}"
    group: "{{ www_group }}"
  tags:
    - always

# - name: "Copy the daemon configuration file into place."
#   shell: "cp $(brew list nginx | grep /homebrew.mxcl.nginx.plist$) /Library/LaunchDaemons/"
#   become: yes
#   become_method: sudo
# - name: "Start Nginx automatically."
#   shell: "launchctl load -w /Library/LaunchDaemons/homebrew.mxcl.nginx.plist"
#   become: yes
#   become_method: sudo
